{
	"name": "df_location_scd2_query",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dim",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "locsc2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "locsc2",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "insfilter1"
				},
				{
					"name": "updfilter2"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          src_Store_Location_ID as short,",
				"          src_Store_Name as string,",
				"          src_Store_Address as string,",
				"          src_Store_Open_Time as string,",
				"          src_Store_Close_Time as string,",
				"          src_State_Name as string,",
				"          tgt_Store_Location_ID as integer,",
				"          tgt_Store_Name as string,",
				"          tgt_Store_Address as string,",
				"          tgt_Store_Open_Time as string,",
				"          tgt_Store_Close_Time as string,",
				"          tgt_State_Name as string,",
				"          tgt_FLAG as string,",
				"          Loc_Dim_Key as integer,",
				"          DM_CREATE_DATE as date,",
				"          src_md5 as binary,",
				"          tgt_md5 as binary,",
				"          flag_new as string,",
				"          flag_deactivate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'select \\r\\nsrc_Store_Location_ID\\r\\n,src_Store_Name\\r\\n,src_Store_Address\\r\\n,src_Store_Open_Time\\r\\n,src_Store_Close_Time\\r\\n,src_State_Name\\r\\n,tgt_Store_Location_ID\\r\\n,tgt_Store_Name\\r\\n,tgt_Store_Address\\r\\n,tgt_Store_Open_Time\\r\\n,tgt_Store_Close_Time\\r\\n,tgt_State_Name\\r\\n,tgt_FLAG\\r\\n,Loc_Dim_Key\\r\\n,DM_CREATE_DATE\\r\\n,src_md5\\r\\n,tgt_md5\\r\\n,case when tgt_Store_Location_ID is NULL or src_md5 <> tgt_md5 then \\'Y\\' end flag_new\\r\\n,case when tgt_Store_Location_ID is not NULL and src_md5 <> tgt_md5 then \\'N\\' end flag_deactivate\\r\\nfrom ( \\r\\nselect \\r\\nA.Store_Location_ID as src_Store_Location_ID,\\r\\nA.Store_Name as src_Store_Name,\\r\\nA.Store_Address as src_Store_Address,\\r\\nA.Store_Open_Time as src_Store_Open_Time,\\r\\nA.Store_Close_Time as src_Store_Close_Time,\\r\\nA.State_Name as src_State_Name,\\r\\nB.Store_Location_ID as tgt_Store_Location_ID,\\r\\nB.Store_Name as tgt_Store_Name,\\r\\nB.Store_Address as tgt_Store_Address,\\r\\nB.Store_Open_Time as tgt_Store_Open_Time,\\r\\nB.Store_Close_Time as tgt_Store_Close_Time,\\r\\nB.State_Name as tgt_State_Name,\\r\\nB.FLAG as tgt_FLAG,\\r\\nB.Loc_Dim_Key,\\r\\ncast(getdate() as date) as DM_CREATE_DATE,\\r\\nHashBytes(\\'MD5\\',concat(cast(A.Store_Name as varchar),cast(A.Store_Address as varchar),cast(A.Store_Open_Time as varchar),cast(A.Store_Close_Time as varchar),cast(A.State_Name as varchar))) as src_md5,\\r\\nHashBytes(\\'MD5\\',concat(cast(B.Store_Name as varchar),cast(B.Store_Address as varchar),cast(B.Store_Open_Time as varchar),cast(B.Store_Close_Time as varchar),cast(B.State_Name as varchar))) as tgt_md5\\r\\nfrom HR.location_dim A \\r\\nleft Join HR.location_dim1 B on \\r\\nA.Store_Location_ID = B.Store_Location_ID\\r\\nAND B.FLAG = \\'Y\\'\\r\\n)a',",
				"     format: 'query') ~> source1",
				"source1 filter(isNull(tgt_Store_Location_ID) || src_md5 != tgt_md5) ~> insfilter1",
				"source1 filter(!isNull(tgt_Store_Location_ID ) && src_md5 !=tgt_md5) ~> updfilter2",
				"updfilter2 alterRow(updateIf(1==1)) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Loc_Dim_Key as integer,",
				"          Store_Location_ID as integer,",
				"          Store_Name as string,",
				"          Store_Address as string,",
				"          Store_Open_Time as string,",
				"          Store_Close_Time as string,",
				"          State_Name as string,",
				"          FLAG as string,",
				"          DM_CREATE_DATE as date",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['Loc_Dim_Key'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Loc_Dim_Key,",
				"          FLAG = flag_deactivate",
				"     )) ~> sink1",
				"insfilter1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Loc_Dim_Key as integer,",
				"          Store_Location_ID as integer,",
				"          Store_Name as string,",
				"          Store_Address as string,",
				"          Store_Open_Time as string,",
				"          Store_Close_Time as string,",
				"          State_Name as string,",
				"          FLAG as string,",
				"          DM_CREATE_DATE as date",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Store_Location_ID = src_Store_Location_ID,",
				"          Store_Name = src_Store_Name,",
				"          Store_Address = src_Store_Address,",
				"          Store_Open_Time = src_Store_Open_Time,",
				"          Store_Close_Time = src_Store_Close_Time,",
				"          State_Name = src_State_Name,",
				"          FLAG = flag_new,",
				"          DM_CREATE_DATE",
				"     )) ~> sink2"
			]
		}
	}
}